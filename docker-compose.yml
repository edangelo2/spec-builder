services:
  streamlit-app:
    build: ./frontend
    environment:
      - API_BASE_URL=http://backend:8000
    ports: ["8501:8501"]        
    networks: [spec-net]
    depends_on: [backend]

  backend:
    build: ./backend
    env_file: .env
    networks: [spec-net]
    ports: ["8000:8000"]

  # ActivePieces backend/API
  activepieces:
    image: activepieces/activepieces:latest
    restart: unless-stopped
    ports:
      - "8080:80"  # Cambio importante: ActivePieces usa puerto 80 internamente
    volumes:
      - ap-data:/var/lib/activepieces
    env_file: .env
    environment:
      - AP_FRONTEND_URL=http://localhost:8080  # Debe coincidir con el puerto expuesto
      - AP_WEBHOOK_URL=http://localhost:8080
    networks: [spec-net]
    depends_on:
      - postgres
      - redis

  # ActivePieces frontend - ELIMINADO porque causa conflictos
  # activepieces-frontend:
  #   image: activepieces/frontend:0.3.0
  #   environment:
  #     - API_URL=http://activepieces:3000
  #   ports:
  #     - "4000:80"
  #   volumes:
  #     - ./frontend/nginx-proxy.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - activepieces
  #   networks:
  #     - spec-net
      
  langchain-worker:
    build: ./langchain_worker
    env_file: .env
    networks: [spec-net]
    depends_on: [vector_api]
    ports: ["8002:8000"]

  vector_api:
    build: ./vector_api
    env_file: .env
    networks: [spec-net]
    depends_on: [chroma_db]
    ports: ["8001:8000"]

  chroma_db:
    image: chromadb/chroma
    volumes: [chroma-data:/chroma]
    networks: [spec-net]

  ollama:
    image: ollama/ollama
    volumes: ["ollama-data:/root/.ollama"]
    networks: [spec-net]
    profiles: ["offline"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: apdb
      POSTGRES_USER: apuser
      POSTGRES_PASSWORD: my-strong-pwd123
    volumes: [ap-pg:/var/lib/postgresql/data]
    networks: [spec-net]

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "${AP_REDIS_PASSWORD}"]
    env_file: .env
    volumes: [redis-data:/data]
    networks: [spec-net]

networks:
  spec-net: {}

volumes:
  ap-data: {}
  chroma-data: {}
  ollama-data: {}
  ap-pg: {}   
  redis-data: {}